// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux8Way (in=load, sel=address[0..2], a=r1, b=r2, c=r3, d=r4, e=r5, f=r6, g=r7, h=r8);
    RAM4K (in=in, load=r1, address=address[3..13], out=outr1);
    RAM4K (in=in, load=r2, address=address[3..13], out=outr2);
    RAM4K (in=in, load=r3, address=address[3..13], out=outr3);
    RAM4K (in=in, load=r4, address=address[3..13], out=outr4);
    RAM4K (in=in, load=r5, address=address[3..13], out=outr5);
    RAM4K (in=in, load=r6, address=address[3..13], out=outr6);
    RAM4K (in=in, load=r7, address=address[3..13], out=outr7);
    RAM4K (in=in, load=r8, address=address[3..13], out=outr8);
    Mux8Way16( a=outr1, b=outr2, c=outr3, d=outr4, e=outr5, f=outr6, g=outr7, h=outr8, sel=address[0..2], out=out);

}